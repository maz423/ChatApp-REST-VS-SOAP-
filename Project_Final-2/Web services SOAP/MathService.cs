//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;

// 
// This source code was auto-generated by Web Services Description Language Utility
//Mono Framework v4.0.30319.42000
//


/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "0.0.0.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Web.Services.WebServiceBindingAttribute(Name="MathServiceSoap", Namespace="http://tempuri.org/NumberService")]
public partial class MathService : System.Web.Services.Protocols.SoapHttpClientProtocol {
    
    private System.Threading.SendOrPostCallback AddNumbersOperationCompleted;
    
    private System.Threading.SendOrPostCallback createRoomOperationCompleted;
    
    private System.Threading.SendOrPostCallback joinRoomOperationCompleted;
    
    private System.Threading.SendOrPostCallback sendMsgOperationCompleted;
    
    private System.Threading.SendOrPostCallback listRoomsOperationCompleted;
    
    private System.Threading.SendOrPostCallback getMsgOperationCompleted;
    
    private System.Threading.SendOrPostCallback lastMsgOperationCompleted;
    
    private System.Threading.SendOrPostCallback getMsgsCountOperationCompleted;
    
    private System.Threading.SendOrPostCallback SubtractNumbersOperationCompleted;
    
    /// <remarks/>
    public MathService() {
        this.Url = "http://xsp1/NumberService.asmx";
    }
    
    /// <remarks/>
    public event AddNumbersCompletedEventHandler AddNumbersCompleted;
    
    /// <remarks/>
    public event createRoomCompletedEventHandler createRoomCompleted;
    
    /// <remarks/>
    public event joinRoomCompletedEventHandler joinRoomCompleted;
    
    /// <remarks/>
    public event sendMsgCompletedEventHandler sendMsgCompleted;
    
    /// <remarks/>
    public event listRoomsCompletedEventHandler listRoomsCompleted;
    
    /// <remarks/>
    public event getMsgCompletedEventHandler getMsgCompleted;
    
    /// <remarks/>
    public event lastMsgCompletedEventHandler lastMsgCompleted;
    
    /// <remarks/>
    public event getMsgsCountCompletedEventHandler getMsgsCountCompleted;
    
    /// <remarks/>
    public event SubtractNumbersCompletedEventHandler SubtractNumbersCompleted;
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/NumberService/AddNumbers", RequestNamespace="http://tempuri.org/NumberService", ResponseNamespace="http://tempuri.org/NumberService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public int AddNumbers(int number1, int number2) {
        object[] results = this.Invoke("AddNumbers", new object[] {
                    number1,
                    number2});
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public void AddNumbersAsync(int number1, int number2) {
        this.AddNumbersAsync(number1, number2, null);
    }
    
    /// <remarks/>
    public void AddNumbersAsync(int number1, int number2, object userState) {
        if ((this.AddNumbersOperationCompleted == null)) {
            this.AddNumbersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddNumbersOperationCompleted);
        }
        this.InvokeAsync("AddNumbers", new object[] {
                    number1,
                    number2}, this.AddNumbersOperationCompleted, userState);
    }
    
    private void OnAddNumbersOperationCompleted(object arg) {
        if ((this.AddNumbersCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.AddNumbersCompleted(this, new AddNumbersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/NumberService/createRoom", RequestNamespace="http://tempuri.org/NumberService", ResponseNamespace="http://tempuri.org/NumberService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string createRoom(string name) {
        object[] results = this.Invoke("createRoom", new object[] {
                    name});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void createRoomAsync(string name) {
        this.createRoomAsync(name, null);
    }
    
    /// <remarks/>
    public void createRoomAsync(string name, object userState) {
        if ((this.createRoomOperationCompleted == null)) {
            this.createRoomOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateRoomOperationCompleted);
        }
        this.InvokeAsync("createRoom", new object[] {
                    name}, this.createRoomOperationCompleted, userState);
    }
    
    private void OncreateRoomOperationCompleted(object arg) {
        if ((this.createRoomCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.createRoomCompleted(this, new createRoomCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/NumberService/joinRoom", RequestNamespace="http://tempuri.org/NumberService", ResponseNamespace="http://tempuri.org/NumberService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string joinRoom(string name) {
        object[] results = this.Invoke("joinRoom", new object[] {
                    name});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void joinRoomAsync(string name) {
        this.joinRoomAsync(name, null);
    }
    
    /// <remarks/>
    public void joinRoomAsync(string name, object userState) {
        if ((this.joinRoomOperationCompleted == null)) {
            this.joinRoomOperationCompleted = new System.Threading.SendOrPostCallback(this.OnjoinRoomOperationCompleted);
        }
        this.InvokeAsync("joinRoom", new object[] {
                    name}, this.joinRoomOperationCompleted, userState);
    }
    
    private void OnjoinRoomOperationCompleted(object arg) {
        if ((this.joinRoomCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.joinRoomCompleted(this, new joinRoomCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/NumberService/sendMsg", RequestNamespace="http://tempuri.org/NumberService", ResponseNamespace="http://tempuri.org/NumberService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string sendMsg(string name, string user, string msg) {
        object[] results = this.Invoke("sendMsg", new object[] {
                    name,
                    user,
                    msg});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void sendMsgAsync(string name, string user, string msg) {
        this.sendMsgAsync(name, user, msg, null);
    }
    
    /// <remarks/>
    public void sendMsgAsync(string name, string user, string msg, object userState) {
        if ((this.sendMsgOperationCompleted == null)) {
            this.sendMsgOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsendMsgOperationCompleted);
        }
        this.InvokeAsync("sendMsg", new object[] {
                    name,
                    user,
                    msg}, this.sendMsgOperationCompleted, userState);
    }
    
    private void OnsendMsgOperationCompleted(object arg) {
        if ((this.sendMsgCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.sendMsgCompleted(this, new sendMsgCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/NumberService/listRooms", RequestNamespace="http://tempuri.org/NumberService", ResponseNamespace="http://tempuri.org/NumberService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string listRooms() {
        object[] results = this.Invoke("listRooms", new object[0]);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void listRoomsAsync() {
        this.listRoomsAsync(null);
    }
    
    /// <remarks/>
    public void listRoomsAsync(object userState) {
        if ((this.listRoomsOperationCompleted == null)) {
            this.listRoomsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlistRoomsOperationCompleted);
        }
        this.InvokeAsync("listRooms", new object[0], this.listRoomsOperationCompleted, userState);
    }
    
    private void OnlistRoomsOperationCompleted(object arg) {
        if ((this.listRoomsCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.listRoomsCompleted(this, new listRoomsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/NumberService/getMsg", RequestNamespace="http://tempuri.org/NumberService", ResponseNamespace="http://tempuri.org/NumberService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string getMsg(string name) {
        object[] results = this.Invoke("getMsg", new object[] {
                    name});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void getMsgAsync(string name) {
        this.getMsgAsync(name, null);
    }
    
    /// <remarks/>
    public void getMsgAsync(string name, object userState) {
        if ((this.getMsgOperationCompleted == null)) {
            this.getMsgOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetMsgOperationCompleted);
        }
        this.InvokeAsync("getMsg", new object[] {
                    name}, this.getMsgOperationCompleted, userState);
    }
    
    private void OngetMsgOperationCompleted(object arg) {
        if ((this.getMsgCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getMsgCompleted(this, new getMsgCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/NumberService/lastMsg", RequestNamespace="http://tempuri.org/NumberService", ResponseNamespace="http://tempuri.org/NumberService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string lastMsg(string name) {
        object[] results = this.Invoke("lastMsg", new object[] {
                    name});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void lastMsgAsync(string name) {
        this.lastMsgAsync(name, null);
    }
    
    /// <remarks/>
    public void lastMsgAsync(string name, object userState) {
        if ((this.lastMsgOperationCompleted == null)) {
            this.lastMsgOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlastMsgOperationCompleted);
        }
        this.InvokeAsync("lastMsg", new object[] {
                    name}, this.lastMsgOperationCompleted, userState);
    }
    
    private void OnlastMsgOperationCompleted(object arg) {
        if ((this.lastMsgCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.lastMsgCompleted(this, new lastMsgCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/NumberService/getMsgsCount", RequestNamespace="http://tempuri.org/NumberService", ResponseNamespace="http://tempuri.org/NumberService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public int getMsgsCount(string name) {
        object[] results = this.Invoke("getMsgsCount", new object[] {
                    name});
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public void getMsgsCountAsync(string name) {
        this.getMsgsCountAsync(name, null);
    }
    
    /// <remarks/>
    public void getMsgsCountAsync(string name, object userState) {
        if ((this.getMsgsCountOperationCompleted == null)) {
            this.getMsgsCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetMsgsCountOperationCompleted);
        }
        this.InvokeAsync("getMsgsCount", new object[] {
                    name}, this.getMsgsCountOperationCompleted, userState);
    }
    
    private void OngetMsgsCountOperationCompleted(object arg) {
        if ((this.getMsgsCountCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getMsgsCountCompleted(this, new getMsgsCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/NumberService/SubtractNumbers", RequestNamespace="http://tempuri.org/NumberService", ResponseNamespace="http://tempuri.org/NumberService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public int SubtractNumbers(int number1, int number2) {
        object[] results = this.Invoke("SubtractNumbers", new object[] {
                    number1,
                    number2});
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public void SubtractNumbersAsync(int number1, int number2) {
        this.SubtractNumbersAsync(number1, number2, null);
    }
    
    /// <remarks/>
    public void SubtractNumbersAsync(int number1, int number2, object userState) {
        if ((this.SubtractNumbersOperationCompleted == null)) {
            this.SubtractNumbersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSubtractNumbersOperationCompleted);
        }
        this.InvokeAsync("SubtractNumbers", new object[] {
                    number1,
                    number2}, this.SubtractNumbersOperationCompleted, userState);
    }
    
    private void OnSubtractNumbersOperationCompleted(object arg) {
        if ((this.SubtractNumbersCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.SubtractNumbersCompleted(this, new SubtractNumbersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    public new void CancelAsync(object userState) {
        base.CancelAsync(userState);
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "0.0.0.0")]
public delegate void AddNumbersCompletedEventHandler(object sender, AddNumbersCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "0.0.0.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class AddNumbersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal AddNumbersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public int Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "0.0.0.0")]
public delegate void createRoomCompletedEventHandler(object sender, createRoomCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "0.0.0.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class createRoomCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal createRoomCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "0.0.0.0")]
public delegate void joinRoomCompletedEventHandler(object sender, joinRoomCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "0.0.0.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class joinRoomCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal joinRoomCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "0.0.0.0")]
public delegate void sendMsgCompletedEventHandler(object sender, sendMsgCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "0.0.0.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class sendMsgCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal sendMsgCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "0.0.0.0")]
public delegate void listRoomsCompletedEventHandler(object sender, listRoomsCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "0.0.0.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class listRoomsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal listRoomsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "0.0.0.0")]
public delegate void getMsgCompletedEventHandler(object sender, getMsgCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "0.0.0.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getMsgCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getMsgCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "0.0.0.0")]
public delegate void lastMsgCompletedEventHandler(object sender, lastMsgCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "0.0.0.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class lastMsgCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal lastMsgCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "0.0.0.0")]
public delegate void getMsgsCountCompletedEventHandler(object sender, getMsgsCountCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "0.0.0.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getMsgsCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getMsgsCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public int Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "0.0.0.0")]
public delegate void SubtractNumbersCompletedEventHandler(object sender, SubtractNumbersCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "0.0.0.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class SubtractNumbersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal SubtractNumbersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public int Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[0]));
        }
    }
}
